apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: {{ .Values.workers_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      serviceAccountName: workers-api
      containers:
        - name: api
          image: "{{ .Values.registry }}/{{ .Values.project }}/workers_api:{{ .Values.tag }}"
          ports:
            - containerPort: 5000
          env:
            - name: BUCKET
              value: "{{ .Values.bucket }}"
            - name: PROJECT
              value: "{{ .Values.project }}"
            {{ if .Values.workers_api_host }}
            - name: WORKERS_API_HOST
              value: "{{ .Values.workers_api_host }}"
            {{ end }}
            - name: VIZ_HOST
              value: "{{ .Values.viz_host }}"
            - name: API_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: API_SECRET_KEY
            - name: BACKEND_CORS_ORIGINS
              value: '{{ .Values.api.allow_origins | toJson }}'
            - name: PROJECT_NAMESPACE
              value: '{{ .Values.project_namespace }}'
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: workers-db-secret
                  key: USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: workers-db-secret
                  key: PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: workers-db-secret
                  key: NAME
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: workers-db-secret
                  key: HOST
          resources:
            requests:
              cpu: 1
              memory: 1G
            limits:
              cpu: 1
              memory: 2G
          volumeMounts:
            - mountPath: /home/cs_workers
              name: api-code-volume

        {{ if .Values.db.use_gcp_cloud_proxy }}
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.17
          command:
            - "/cloud_sql_proxy"
            - "-instances={{ .Values.db.gcp_sql_instance_name }}=tcp:5432"
          securityContext:
            runAsNonRoot: true
        {{ end }}

      {{if .Values.api.dev_mode }}
      volumes:
        - name: api-code-volume
          hostPath:
            path: /home/cs_workers
            type: Directory
      {{ end }}
      nodeSelector:
        component: api
